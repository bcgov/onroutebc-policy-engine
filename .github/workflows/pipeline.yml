name: CI/CD for Node.js Package

on:
  push:
    branches:
      - main
  release:
    types: [created]
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - run: ls -a

      - name: Lint code
        uses: github/super-linter@latest
        with:
          languages: "javascript"
          eslint_d: true # Optional: Use ESLint in daemon mode
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TYPESCRIPT_STANDARD_TSCONFIG_FILE: onroutebc/tsconfig.json  

  commit-check:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check commit messages
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}  # Fetch the base branch
          git log origin/${{ github.event.pull_request.base.ref }}..HEAD --pretty=format:%s | grep -qE "^(feat|fix|chore|docs|style|refactor|perf|test|build|ci|revert|WIP|BREAKING CHANGE): " || {
            echo "Aborting: Commit message does not follow conventional commits format." && exit 1
          }

  versioning:
    runs-on: ubuntu-latest
    needs: commit-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Bump version based on commits
        run: |
          npx standard-version --release-as patch # or minor/major based on your need
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit version bump
        run: |
          git config --local user.name "GitHub Action"
          git config --local user.email "action@github.com"
          git add package.json package-lock.json
          git commit -m "chore(release): bump version" || echo "No changes to commit"
          git push

  publish:
    runs-on: ubuntu-latest
    needs: versioning

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          registry-url: 'https://npm.pkg.github.com/' # GitHub Packages registry

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish --access public # Use --access public for public packages

