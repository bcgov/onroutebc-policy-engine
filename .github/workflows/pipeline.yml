---
name: CI/CD for Node.js Package

on:
  pull_request: # Triggers on all pull requests
  push:
    branches:
      - main  # Triggers on pushes to the main branch
  release:
    types: [created]  # Triggers on release creation

jobs:
  vars:
    name: Set Variables
    runs-on: ubuntu-22.04
    outputs:
      commit_ref: ${{ steps.commit_ref.outputs.commit_ref }}
    steps:
      - name: Commit Refrence
        id: commit_ref
        shell: bash
        run: | 
          if [[ "${{ github.event_name}}" == "pull_request" ]]; then
            echo "commit_ref=${{ github.event.pull_request.base.ref }} >> $GITHUB_OUTPUT"
          else
            echo "commit_ref=HEAD^ >> $GITHUB_OUTPUT"
          fi
          echo "commit_ref: ${commit_ref}"

  lint:
    runs-on: ubuntu-latest  # Runs on the latest version of Ubuntu
    needs: [vars]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checks out the code from the repository

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Specify the Node.js version to use

      - name: Install dependencies
        run: npm install  # Installs project dependencies

      - name: Lint code
        run: npx eslint . --config .eslintrc.cjs  # Run ESLint with the specified config

  commit-check:
    runs-on: ubuntu-latest  # Runs on the latest version of Ubuntu
    needs: [vars,lint]  # This job depends on the successful completion of the lint job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checks out the code for the current pull request

      - name: Check commit messages
        run: |
          git fetch origin ${{ needs.vars.outputs.commit_ref }}
          git log origin/${{ needs.vars.outputs.commit_ref }}..HEAD --pretty=format:%s | grep -qE "^(feat|fix|chore|docs|style|refactor|perf|test|build|ci|revert|WIP|BREAKING CHANGE): " || {
            echo "Aborting: Commit message does not follow conventional commits format.";
            echo "Message: $(git log origin/${{ needs.vars.outputs.commit_ref }}..HEAD --pretty=format:%s)";
            exit 1
          }

  versioning:
    runs-on: ubuntu-latest  # Runs on the latest version of Ubuntu
    needs: commit-check  # This job depends on the successful completion of the commit-check job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checks out the code

      - name: Set up Node.js
        uses: actions/setup-node@v2  # Sets up the Node.js environment
        with:
          node-version: '16'  # Specify the Node.js version to use

      - name: Install dependencies
        run: npm install  # Installs project dependencies

      - name: Bump version based on commits
        run: |
          npx standard-version --release-as patch  # Adjust to minor/major as needed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Auth token for version bumping

      - name: Commit version bump
        run: |
          git config --local user.name "GitHub Action"
          git config --local user.email "action@github.com"
          git add package.json package-lock.json
          git commit -m "chore(release): bump version" || echo "No changes to commit"
          git push  # Pushes the version bump to the repository

  publish:
    runs-on: ubuntu-latest  # Runs on the latest version of Ubuntu
    needs: versioning  # This job depends on the successful completion of the versioning job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checks out the code

      - name: Set up Node.js
        uses: actions/setup-node@v2  # Sets up the Node.js environment
        with:
          node-version: '16'  # Specify the Node.js version to use
          registry-url: 'https://npm.pkg.github.com/'  # URL for GitHub Packages

      - name: Install dependencies
        run: npm install  # Installs project dependencies

      - name: Run tests
        run: npm test  # Runs the project tests

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Auth token for publishing
        run: npm publish --access public  # Publishes the package to GitHub Packages
