---
name: CI/CD for Node.js Package

on:
  pull_request: # Triggers on all pull requests
  push:
    branches:
      - main  # Triggers on pushes to the main branch
  release:
    types: [created]  # Triggers on release creation

jobs:
  vars:
    name: Set Variables
    runs-on: ubuntu-22.04
    outputs:
      commit_ref: ${{ steps.commit_ref.outputs.commit_ref }}
    steps:
      - name: Commit Refrence
        id: commit_ref
        shell: bash
        run: | 
          if [[ "${{ github.event_name}}" == "pull_request" ]]; then
            commit_ref=${{ github.event.pull_request.base.ref }}
          else
            commit_ref=HEAD^
          fi
          echo "commit_ref=${commit_ref}"
          echo "commit_ref=${commit_ref}" >> $GITHUB_OUTPUT

  lint:
    runs-on: ubuntu-latest  # Runs on the latest version of Ubuntu
    needs: [vars]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Checks out the code from the repository

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Specify the Node.js version to use

      - name: Install dependencies
        run: npm install  # Installs project dependencies

      - name: Lint code
        run: npx eslint . --config .eslintrc.cjs  # Run ESLint with the specified config

  commit-check:
    runs-on: ubuntu-latest  # Runs on the latest version of Ubuntu
    needs: [vars,lint]  # This job depends on the successful completion of the lint job

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Checks out the code for the current pull request
        with:
          fetch-depth: 0

      - name: Check commit messages
        run: |
          set -eux
          #git fetch origin ${{ needs.vars.outputs.commit_ref }}
          git log origin/${{ needs.vars.outputs.commit_ref }} --pretty=format:%s
          git log HEAD --pretty=format:%s
          git log HEAD^ --pretty=format:%s
          git log origin/${{ needs.vars.outputs.commit_ref }}..HEAD --pretty=format:%s | grep -qE "^(feat|fix|chore|docs|style|refactor|perf|test|build|ci|revert|WIP|BREAKING CHANGE): " || {
            echo "Aborting: Commit message does not follow conventional commits format.";
            echo "Message: $(git log origin/${{ needs.vars.outputs.commit_ref }}..HEAD --pretty=format:%s)";
            exit 1
          }
  versioning:
    runs-on: ubuntu-latest  # Runs on the latest version of Ubuntu
    needs: commit-check  # This job depends on the successful completion of the commit-check job

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Checks out the code
        with:
          fetch-depth: 0
      
      - name: Conventional Changelog Action
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.github_token }}

